"=========================================================
" Plugins
"=========================================================
set nocompatible              " be iMproved, required
filetype off                  " required
" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'
" Snippets
Plugin 'MarcWeber/vim-addon-mw-utils'
Plugin 'tomtom/tlib_vim'
Plugin 'garbas/vim-snipmate'
Plugin 'honza/vim-snippets'
" Python
Plugin 'klen/python-mode'
Plugin 'vim-scripts/indentpython.vim'
" Git
Plugin 'tpope/vim-fugitive'
" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required
"=========================================================
" Common configuration
"=========================================================
set ignorecase
set ruler
set modeline
set showcmd
set noexpandtab
set smartindent
set tabstop=2
set shiftwidth=2
set nocompatible
set nohlsearch
set autoindent
set number
set vb t_vb=
set backup
set backupdir=~/.vim/backup
set directory=~/.vim/tmp
set fileencodings=utf-8,ucs-bom,default,latin1
set scrolloff=5
set listchars+=space:.
set list
set undolevels=1000
syntax enable
colorscheme delek
command W :execute ':silent w !sudo tee % > /dev/null' | :edit!

" Limits
if exists('+colorcolumn')
    set colorcolumn=80
    hi ColorColumn ctermbg=grey guibg=grey
else
    au BufWinEnter * let w:m2=matchadd('ErrorMsg', '\%>80v.\+', -1)
    hi ColorColumn ctermbg=lightgrey guibg=lightgrey
endif
"=========================================================
" Mappings
"=========================================================
map <C-t> :tabnew<CR>
map <C-p> :tabprevious<CR>
map <C-n> :tabnext<CR>
map <C-q> :tabclose<CR>
map <C-j> :%!python -m json.tool<CR>
